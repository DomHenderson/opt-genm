  .extern caml_alloc1
  .extern caml_alloc_young
  .extern caml_allocN
  .extern caml_bottom_of_stack
  .extern caml_c_call_i64_i64$caml_format_float
  .extern caml_last_return_address
  .extern caml_local_roots
  .extern camlStdlib__const_string_706
  .extern camlStdlib__output_string_852
  .extern camlStdlib__Pccall_2729
  .extern camlStdlib__valid_float_lexem_656
  .extern camlTest__const_float_120
  .extern caml_alloc_small
  .extern caml_copy_double

camlTest__entry:
  .call caml
  .stack  416
  .args 0
.LBBentry1847:
  mov.i64 $25975, 3
  mov.i64 $25976, 1
  sra.i64 $25977, $25975, $25976
  sext.f64  $25978, $25977
  mov.i64 $25979, 64
  mov.i64 $25980, caml_allocN
  call.1.caml_alloc.i64 $25981, $25980, $25979 @caml_frame @caml_value
  mov.i64 $25982, 1277
  mov.i64 $25983, -8
  add.i64 $25984, $25981, $25983
  st.8  $25984, $25982
  st.8  $25981, $25978
  mov.i64 $25987, 16
  add.i64 $25988, $25981, $25987 @caml_value
  mov.i64 $25989, 1277
  mov.i64 $25990, -8
  add.i64 $25991, $25988, $25990
  st.8  $25991, $25989
  st.8  $25988, $25978
  mov.i64 $25994, 32
  add.i64 $25995, $25981, $25994 @caml_value
  mov.i64 $25996, 1277
  mov.i64 $25997, -8
  add.i64 $25998, $25995, $25997
  st.8  $25998, $25996
  st.8  $25995, $25978
  mov.i64 $26001, 48
  add.i64 $26002, $25981, $26001 @caml_value
  mov.i64 $26003, 1277
  mov.i64 $26004, -8
  add.i64 $26005, $26002, $26004
  st.8  $26005, $26003
  st.8  $26002, $25978
  mov.i64 $26008, $pc @caml_frame
  mov.i64 $26009, caml_last_return_address
  st.8  $26009, $26008
  mov.i64 $26011, $rsp
  mov.i64 $26012, caml_bottom_of_stack
  st.8  $26012, $26011
  frame.i64 $26014, 152
  st.8  $26014, $25995
  frame.i64 $26016, 160
  st.8  $26016, $26002
  frame.i64 $26018, 144
  st.8  $26018, $25988
  frame.i64 $26020, 136
  st.8  $26020, $25981
  mov.i64 $26022, caml_local_roots
  ld.8.i64  $26023, $26022
  mov.i64 $26024, 16
  frame.i64 $26025, 88
  mov.i64 $26026, 1
  st.8  $26025, $26026
  mov.i64 $26028, 8
  frame.i64 $26029, 80
  mov.i64 $26030, 4
  st.8  $26029, $26030
  frame.i64 $26032, 72
  st.8  $26032, $26023
  frame.i64 $26034, 96
  frame.i64 $26035, 160
  st.8  $26034, $26035
  frame.i64 $26037, 104
  frame.i64 $26038, 152
  st.8  $26037, $26038
  frame.i64 $26040, 112
  frame.i64 $26041, 144
  st.8  $26040, $26041
  frame.i64 $26043, 120
  frame.i64 $26044, 136
  st.8  $26043, $26044
  frame.i64 $26046, 64
  st.8  $26046, $26026
  frame.i64 $26048, 16
  st.8  $26048, $26026
  frame.i64 $26050, 8
  st.8  $26050, $26026
  frame.i64 $26052, 0
  st.8  $26022, $26052
  frame.i64 $26054, 24
  frame.i64 $26055, 64
  st.8  $26054, $26055
  frame.i64 $26057, 0
  frame.i64 $26058, 72
  st.8  $26057, $26058
  mov.i32 $26060, 251
  mov.i64 $26061, caml_alloc_small
  call.2.c.i64  $26062, $26061, $26024, $26060
  frame.i64 $26063, 64
  st.8  $26063, $26062
  frame.i64 $26065, 160
  ld.8.i64  $26066, $26065
  ld.8.f64  $26067, $26066
  trunc.f32 $26068, $26067
  st.4  $26062, $26068
  add.i64 $26070, $26062, $26030
  frame.i64 $26071, 152
  ld.8.i64  $26072, $26071
  ld.8.f64  $26073, $26072
  trunc.f32 $26074, $26073
  st.4  $26070, $26074
  add.i64 $26076, $26062, $26028
  frame.i64 $26077, 144
  ld.8.i64  $26078, $26077
  ld.8.f64  $26079, $26078
  trunc.f32 $26080, $26079
  st.4  $26076, $26080
  mov.i64 $26082, 12
  add.i64 $26083, $26062, $26082
  frame.i64 $26084, 136
  ld.8.i64  $26085, $26084
  ld.8.f64  $26086, $26085
  trunc.f32 $26087, $26086
  st.4  $26083, $26087
  st.8  $26022, $26023
  frame.i64 $26090, 64
  ld.8.i64  $26091, $26090
  mov.i64 $26092, 1
  sra.i64 $26093, $25975, $26092
  sext.f64  $26094, $26093
  mov.i64 $26095, 64
  mov.i64 $26096, caml_allocN
  call.1.caml_alloc.i64 $26097, $26096, $26095 @caml_frame @caml_value
  mov.i64 $26098, 1277
  mov.i64 $26099, -8
  add.i64 $26100, $26097, $26099
  st.8  $26100, $26098
  st.8  $26097, $26094
  mov.i64 $26103, 16
  add.i64 $26104, $26097, $26103 @caml_value
  mov.i64 $26105, 1277
  mov.i64 $26106, -8
  add.i64 $26107, $26104, $26106
  st.8  $26107, $26105
  st.8  $26104, $26094
  mov.i64 $26110, 32
  add.i64 $26111, $26097, $26110 @caml_value
  mov.i64 $26112, 1277
  mov.i64 $26113, -8
  add.i64 $26114, $26111, $26113
  st.8  $26114, $26112
  st.8  $26111, $26094
  mov.i64 $26117, 48
  add.i64 $26118, $26097, $26117 @caml_value
  mov.i64 $26119, 1277
  mov.i64 $26120, -8
  add.i64 $26121, $26118, $26120
  st.8  $26121, $26119
  st.8  $26118, $26094
  mov.i64 $26124, $pc @caml_frame
  mov.i64 $26125, caml_last_return_address
  st.8  $26125, $26124
  mov.i64 $26127, $rsp
  mov.i64 $26128, caml_bottom_of_stack
  st.8  $26128, $26127
  frame.i64 $26130, 400
  st.8  $26130, $26111
  frame.i64 $26132, 408
  st.8  $26132, $26118
  frame.i64 $26134, 392
  st.8  $26134, $26104
  frame.i64 $26136, 384
  st.8  $26136, $26097
  mov.i64 $26138, caml_local_roots
  ld.8.i64  $26139, $26138
  mov.i64 $26140, 16
  frame.i64 $26141, 336
  mov.i64 $26142, 1
  st.8  $26141, $26142
  mov.i64 $26144, 8
  frame.i64 $26145, 328
  mov.i64 $26146, 4
  st.8  $26145, $26146
  frame.i64 $26148, 320
  st.8  $26148, $26139
  frame.i64 $26150, 344
  frame.i64 $26151, 408
  st.8  $26150, $26151
  frame.i64 $26153, 352
  frame.i64 $26154, 400
  st.8  $26153, $26154
  frame.i64 $26156, 360
  frame.i64 $26157, 392
  st.8  $26156, $26157
  frame.i64 $26159, 368
  frame.i64 $26160, 384
  st.8  $26159, $26160
  frame.i64 $26162, 312
  st.8  $26162, $26142
  frame.i64 $26164, 264
  st.8  $26164, $26142
  frame.i64 $26166, 256
  st.8  $26166, $26142
  frame.i64 $26168, 248
  st.8  $26138, $26168
  frame.i64 $26170, 272
  frame.i64 $26171, 312
  st.8  $26170, $26171
  frame.i64 $26173, 248
  frame.i64 $26174, 320
  st.8  $26173, $26174
  mov.i32 $26176, 251
  mov.i64 $26177, caml_alloc_small
  call.2.c.i64  $26178, $26177, $26140, $26176
  frame.i64 $26179, 312
  st.8  $26179, $26178
  frame.i64 $26181, 408
  ld.8.i64  $26182, $26181
  ld.8.f64  $26183, $26182
  trunc.f32 $26184, $26183
  st.4  $26178, $26184
  add.i64 $26186, $26178, $26146
  frame.i64 $26187, 400
  ld.8.i64  $26188, $26187
  ld.8.f64  $26189, $26188
  trunc.f32 $26190, $26189
  st.4  $26186, $26190
  add.i64 $26192, $26178, $26144
  frame.i64 $26193, 392
  ld.8.i64  $26194, $26193
  ld.8.f64  $26195, $26194
  trunc.f32 $26196, $26195
  st.4  $26192, $26196
  mov.i64 $26198, 12
  add.i64 $26199, $26178, $26198
  frame.i64 $26200, 384
  ld.8.i64  $26201, $26200
  ld.8.f64  $26202, $26201
  trunc.f32 $26203, $26202
  st.4  $26199, $26203
  st.8  $26138, $26139
  frame.i64 $26206, 312
  ld.8.i64  $26207, $26206
  mov.i64 $26208, $pc @caml_frame
  mov.i64 $26209, caml_last_return_address
  st.8  $26209, $26208
  mov.i64 $26211, $rsp
  mov.i64 $26212, caml_bottom_of_stack
  st.8  $26212, $26211
  frame.i64 $26214, 240
  st.8  $26214, $26091
  frame.i64 $26216, 232
  st.8  $26216, $26207
  mov.i64 $26218, caml_local_roots
  ld.8.i64  $26219, $26218
  frame.i64 $26220, 184
  mov.i64 $26221, 1
  st.8  $26220, $26221
  mov.i64 $26223, 8
  frame.i64 $26224, 176
  mov.i64 $26225, 2
  st.8  $26224, $26225
  frame.i64 $26227, 168
  st.8  $26218, $26227
  frame.i64 $26229, 168
  st.8  $26229, $26219
  frame.i64 $26231, 192
  frame.i64 $26232, 240
  st.8  $26231, $26232
  frame.i64 $26234, 200
  frame.i64 $26235, 232
  st.8  $26234, $26235
  add.i64 $26237, $26207, $26223
  ld.4.f32  $26238, $26237
  add.i64 $26239, $26091, $26223
  ld.4.f32  $26240, $26239
  mul.f32 $26241, $26240, $26238
  mov.i64 $26242, 4
  add.i64 $26243, $26207, $26242
  ld.4.f32  $26244, $26243
  add.i64 $26245, $26091, $26242
  ld.4.f32  $26246, $26245
  mul.f32 $26247, $26246, $26244
  ld.4.f32  $26248, $26207
  ld.4.f32  $26249, $26091
  mul.f32 $26250, $26249, $26248
  mov.f32 $26251, 0
  add.f32 $26252, $26250, $26251
  add.f32 $26253, $26252, $26247
  add.f32 $26254, $26253, $26241
  mov.i64 $26255, 12
  add.i64 $26256, $26207, $26255
  ld.4.f32  $26257, $26256
  add.i64 $26258, $26091, $26255
  ld.4.f32  $26259, $26258
  mul.f32 $26260, $26259, $26257
  add.f32 $26261, $26254, $26260
  fext.f64  $26262, $26261
  mov.i64 $26263, caml_copy_double
  call.1.c.i64  $26264, $26263, $26262
  st.8  $26218, $26219
  mov.i64 $26266, 1 @caml_value
  ret $26266
